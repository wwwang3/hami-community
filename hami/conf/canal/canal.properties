#################################################
######### 		common argument		#############
#################################################
canal.port=11111
canal.metrics.pull.port=11112
# canal admin config
#canal.admin.manager = 127.0.0.1:8089
canal.admin.port=11110
canal.admin.user=admin
canal.admin.passwd=4ACFE3202A5FF5CF467898FC58AAB1D615029441
canal.withoutNetty=false
# tcp, kafka, rocketMQ, rabbitMQ, pulsarMQ
# flush meta cursor/parse position to file
canal.file.data.dir=${canal.conf.dir}
canal.file.flush.period=1000
## memory store RingBuffer size, should be Math.pow(2,n)
canal.instance.memory.buffer.size=16384
## memory store RingBuffer used memory unit size , default 1kb
canal.instance.memory.buffer.memunit=1024
## meory store gets mode used MEMSIZE or ITEMSIZE
canal.instance.memory.batch.mode=MEMSIZE
canal.instance.memory.rawEntry=true
## detecing config
canal.instance.detecting.enable=false
#canal.instance.detecting.sql = insert into retl.xdual values(1,now()) on duplicate key update x=now()
canal.instance.detecting.sql=select 1
canal.instance.detecting.interval.time=3
canal.instance.detecting.retry.threshold=3
canal.instance.detecting.heartbeatHaEnable=false
# support maximum transaction size, more than the size of the transaction will be cut into multiple transactions delivery
canal.instance.transaction.size=1024
# mysql fallback connected to new master should fallback times
canal.instance.fallbackIntervalInSeconds=60
# network config
canal.instance.network.receiveBufferSize=16384
canal.instance.network.sendBufferSize=16384
canal.instance.network.soTimeout=30
# binlog filter config
canal.instance.filter.druid.ddl=true
canal.instance.filter.query.dcl=false
canal.instance.filter.query.dml=false
canal.instance.filter.query.ddl=false
canal.instance.filter.table.error=false
canal.instance.filter.rows=false
canal.instance.filter.transaction.entry=false
canal.instance.filter.dml.insert=false
canal.instance.filter.dml.update=false
canal.instance.filter.dml.delete=false
# binlog format/image check
canal.instance.binlog.format=ROW,STATEMENT,MIXED
canal.instance.binlog.image=FULL,MINIMAL,NOBLOB
# binlog ddl isolation
canal.instance.get.ddl.isolation=false
# parallel parser config
canal.instance.parser.parallel=true
## concurrent thread number, default 60% available processors, suggest not to exceed Runtime.getRuntime().availableProcessors()
#canal.instance.parser.parallelThreadSize = 16
## disruptor ringbuffer size, must be power of 2
canal.instance.parser.parallelBufferSize=256
# table meta tsdb info
canal.instance.tsdb.enable=true
canal.instance.tsdb.dir=${canal.file.data.dir:../conf}/${canal.instance.destination:}
canal.instance.tsdb.url=jdbc:h2:${canal.instance.tsdb.dir}/h2;CACHE_SIZE=1000;MODE=MYSQL;
canal.instance.tsdb.dbUsername=canal
canal.instance.tsdb.dbPassword=canal
# dump snapshot interval, default 24 hour
canal.instance.tsdb.snapshot.interval=24
# purge snapshot expire , default 360 hour(15 days)
canal.instance.tsdb.snapshot.expire=360
#################################################
######### 		destinations		#############
#################################################
# conf root dir
canal.conf.dir=../conf
# auto scan instance dir add/remove and start/stop instance
canal.auto.scan=true
canal.auto.scan.interval=5
# set this value to 'true' means that when binlog pos not found, skip to latest.
# WARN: pls keep 'false' in production env, or if you know what you want.
canal.auto.reset.latest.pos.mode=false
canal.instance.tsdb.spring.xml=classpath:spring/tsdb/h2-tsdb.xml
#canal.instance.tsdb.spring.xml = classpath:spring/tsdb/mysql-tsdb.xml
canal.instance.global.mode=spring
canal.instance.global.lazy=false
canal.instance.global.manager.address=${canal.admin.manager}
#canal.instance.global.spring.xml = classpath:spring/memory-instance.xml
canal.instance.global.spring.xml=classpath:spring/file-instance.xml
#canal.instance.global.spring.xml = classpath:spring/default-instance.xml
canal.mq.canalBatchSize=50
canal.mq.canalGetTimeout=100
# Set this value to "cloud", if you want open message trace feature in aliyun.
canal.mq.accessChannel=local
canal.mq.database.hash=true
canal.mq.send.thread.size=30
canal.mq.build.thread.size=8

canal.serverMode=rabbitMQ
canal.destinations=example
canal.mq.flatMessage=true
canal.mq.topic=/canal
canal.mq.dynamicTopic=.*\\..*
rabbitmq.host=192.168.3.13
rabbitmq.virtual.host=/
rabbitmq.exchange=hami-canal-exchange
rabbitmq.username=root
rabbitmq.password=123456
rabbitmq.deliveryMode=topic
rabbitmq.queue=hami-canal-queue
rabbitmq.routingKey=/canal
